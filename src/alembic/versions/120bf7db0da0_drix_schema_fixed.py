"""Drix Schema Fixed

Revision ID: 120bf7db0da0
Revises: 
Create Date: 2024-12-16 13:18:37.271184

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = '120bf7db0da0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('MATURITY_RISK_FACTOR_LINKAGE', schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'issuer_type',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'issuer',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'type_rate',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'currency',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'locality',
               existing_type=sa.VARCHAR(length=30, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'type_amortizaton',
               existing_type=mssql.BIT(),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'days_since_issued',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'days_until_maturity',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'minimum_outstanding',
               existing_type=sa.FLOAT(precision=53),
               nullable=True,
               schema='DRIX')
    op.add_column('SCHEDULE', sa.Column('frequency_id', sa.Integer(), nullable=False), schema='DRIX')
    op.add_column('SCHEDULE', sa.Column('convention_id', sa.Integer(), nullable=False), schema='DRIX')
    op.add_column('SCHEDULE', sa.Column('terminationDateConvention_id', sa.Integer(), nullable=False), schema='DRIX')
    op.drop_constraint('FK__SCHEDULE__conven__00D5CB2D', 'SCHEDULE', schema='DRIX', type_='foreignkey')
    op.drop_constraint('FK__SCHEDULE__termin__01C9EF66', 'SCHEDULE', schema='DRIX', type_='foreignkey')
    op.drop_constraint('FK__SCHEDULE__freque__7FE1A6F4', 'SCHEDULE', schema='DRIX', type_='foreignkey')
    op.create_foreign_key(None, 'SCHEDULE', 'FREQUENCY', ['frequency_id'], ['id'], source_schema='DRIX', referent_schema='DRIX')
    op.create_foreign_key(None, 'SCHEDULE', 'CONVENTION', ['terminationDateConvention_id'], ['id'], source_schema='DRIX', referent_schema='DRIX')
    op.create_foreign_key(None, 'SCHEDULE', 'CONVENTION', ['convention_id'], ['id'], source_schema='DRIX', referent_schema='DRIX')
    op.drop_column('SCHEDULE', 'terminationDateConvention', schema='DRIX')
    op.drop_column('SCHEDULE', 'end_date', schema='DRIX')
    op.drop_column('SCHEDULE', 'frequency', schema='DRIX')
    op.drop_column('SCHEDULE', 'convention', schema='DRIX')
    op.drop_column('SCHEDULE', 'start_date', schema='DRIX')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('SCHEDULE', sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False), schema='DRIX')
    op.add_column('SCHEDULE', sa.Column('convention', sa.INTEGER(), autoincrement=False, nullable=False), schema='DRIX')
    op.add_column('SCHEDULE', sa.Column('frequency', sa.INTEGER(), autoincrement=False, nullable=False), schema='DRIX')
    op.add_column('SCHEDULE', sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False), schema='DRIX')
    op.add_column('SCHEDULE', sa.Column('terminationDateConvention', sa.INTEGER(), autoincrement=False, nullable=False), schema='DRIX')
    op.drop_constraint(None, 'SCHEDULE', schema='DRIX', type_='foreignkey')
    op.drop_constraint(None, 'SCHEDULE', schema='DRIX', type_='foreignkey')
    op.drop_constraint(None, 'SCHEDULE', schema='DRIX', type_='foreignkey')
    op.create_foreign_key('FK__SCHEDULE__freque__7FE1A6F4', 'SCHEDULE', 'FREQUENCY', ['frequency'], ['id'], source_schema='DRIX', referent_schema='DRIX')
    op.create_foreign_key('FK__SCHEDULE__termin__01C9EF66', 'SCHEDULE', 'CONVENTION', ['terminationDateConvention'], ['id'], source_schema='DRIX', referent_schema='DRIX')
    op.create_foreign_key('FK__SCHEDULE__conven__00D5CB2D', 'SCHEDULE', 'CONVENTION', ['convention'], ['id'], source_schema='DRIX', referent_schema='DRIX')
    op.drop_column('SCHEDULE', 'terminationDateConvention_id', schema='DRIX')
    op.drop_column('SCHEDULE', 'convention_id', schema='DRIX')
    op.drop_column('SCHEDULE', 'frequency_id', schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'minimum_outstanding',
               existing_type=sa.FLOAT(precision=53),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'days_until_maturity',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'days_since_issued',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'type_amortizaton',
               existing_type=mssql.BIT(),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'locality',
               existing_type=sa.VARCHAR(length=30, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'currency',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'type_rate',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'issuer',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='DRIX')
    op.alter_column('REBALANCING_RULES', 'issuer_type',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='DRIX')
    op.create_table('MATURITY_RISK_FACTOR_LINKAGE',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('index_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('maturity_risk_factor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['index_id'], ['DRIX.INDEX.id'], name='FK__MATURITY___index__0E2FC64B'),
    sa.ForeignKeyConstraint(['maturity_risk_factor_id'], ['DRIX.MATURITY_RISK_FACTOR.id'], name='FK__MATURITY___matur__0F23EA84'),
    sa.PrimaryKeyConstraint('id', name='PK__MATURITY__3213E83F984EC03F'),
    schema='DRIX'
    )
    # ### end Alembic commands ###
